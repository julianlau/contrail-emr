/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package contrail;  
@SuppressWarnings("all")
/** Structure representing a DNA sequence read encoded as byte array. */
public class SequenceReadByte extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"SequenceReadByte\",\"namespace\":\"contrail\",\"doc\":\"Structure representing a DNA sequence read encoded as byte array.\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"ID for the read.\"},{\"name\":\"dna\",\"type\":\"bytes\",\"doc\":\"The dna sequence for this read.\"},{\"name\":\"mate_pair_id\",\"type\":\"int\",\"doc\":\"ID indicating which mate pair this sequence belongs to\"}]}");
  /** ID for the read. */
  public java.lang.CharSequence id;
  /** The dna sequence for this read. */
  public java.nio.ByteBuffer dna;
  /** ID indicating which mate pair this sequence belongs to */
  public int mate_pair_id;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return dna;
    case 2: return mate_pair_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: dna = (java.nio.ByteBuffer)value$; break;
    case 2: mate_pair_id = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
